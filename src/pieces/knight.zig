const std = @import("std");
const lookup = @import("lookup.zig");
const testing = @import("testing.zig");

// Taking a u6 means we can safely do bit shifts without having to cast
pub fn generate_knight_moves(knight_pos: u6) u64 {
    // The basic way a knight moves ( 1 + 2 in perpendicilar directions)
    var pattern: u64 = 0b01010000_10001000_00000000_10001000_01010000_00000000_00000000_00000000;

    // The pattern is for knight in position 18, the first spot in which the knight can move in any direction
    const patternStartPos = 18;

    // Shift the pattern to match the position of the knight
    if (knight_pos > patternStartPos) {
        pattern = pattern >> (knight_pos - patternStartPos);
    }

    if (knight_pos < patternStartPos) {
        pattern = pattern << (patternStartPos - knight_pos);
    }

    const col = lookup.index_to_col(knight_pos);

    // Check if the knight is placed on the edge
    if (col < 2) {
        return pattern & 0b11110000_11110000_11110000_11110000_11110000_11110000_11110000_11110000;
    }

    if (col > 5) {
        return pattern & 0b00001111_00001111_00001111_00001111_00001111_00001111_00001111_00001111;
    }

    return pattern;
}

test generate_knight_moves {
    std.testing.log_level = .debug;

    try testing.expectBitBoardArray(
        [64]u64{
            // A8
            0b00000000_00100000_01000000_00000000_00000000_00000000_00000000_00000000,
            0b00000000_00010000_10100000_00000000_00000000_00000000_00000000_00000000,
            0b00000000_10001000_01010000_00000000_00000000_00000000_00000000_00000000,
            0b00000000_01000100_00101000_00000000_00000000_00000000_00000000_00000000,
            0b00000000_00100010_00010100_00000000_00000000_00000000_00000000_00000000,
            0b00000000_00010001_00001010_00000000_00000000_00000000_00000000_00000000,
            0b00000000_00001000_00000101_00000000_00000000_00000000_00000000_00000000,
            0b00000000_00000100_00000010_00000000_00000000_00000000_00000000_00000000,
            // A7
            0b00100000_00000000_00100000_01000000_00000000_00000000_00000000_00000000,
            0b00010000_00000000_00010000_10100000_00000000_00000000_00000000_00000000,
            0b10001000_00000000_10001000_01010000_00000000_00000000_00000000_00000000,
            0b01000100_00000000_01000100_00101000_00000000_00000000_00000000_00000000,
            0b00100010_00000000_00100010_00010100_00000000_00000000_00000000_00000000,
            0b00010001_00000000_00010001_00001010_00000000_00000000_00000000_00000000,
            0b00001000_00000000_00001000_00000101_00000000_00000000_00000000_00000000,
            0b00000100_00000000_00000100_00000010_00000000_00000000_00000000_00000000,
            // A6
            0b01000000_00100000_00000000_00100000_01000000_00000000_00000000_00000000,
            0b10100000_00010000_00000000_00010000_10100000_00000000_00000000_00000000,
            0b01010000_10001000_00000000_10001000_01010000_00000000_00000000_00000000,
            0b00101000_01000100_00000000_01000100_00101000_00000000_00000000_00000000,
            0b00010100_00100010_00000000_00100010_00010100_00000000_00000000_00000000,
            0b00001010_00010001_00000000_00010001_00001010_00000000_00000000_00000000,
            0b00000101_00001000_00000000_00001000_00000101_00000000_00000000_00000000,
            0b00000010_00000100_00000000_00000100_00000010_00000000_00000000_00000000,
            // A5
            0b00000000_01000000_00100000_00000000_00100000_01000000_00000000_00000000,
            0b00000000_10100000_00010000_00000000_00010000_10100000_00000000_00000000,
            0b00000000_01010000_10001000_00000000_10001000_01010000_00000000_00000000,
            0b00000000_00101000_01000100_00000000_01000100_00101000_00000000_00000000,
            0b00000000_00010100_00100010_00000000_00100010_00010100_00000000_00000000,
            0b00000000_00001010_00010001_00000000_00010001_00001010_00000000_00000000,
            0b00000000_00000101_00001000_00000000_00001000_00000101_00000000_00000000,
            0b00000000_00000010_00000100_00000000_00000100_00000010_00000000_00000000,
            // A4
            0b00000000_00000000_01000000_00100000_00000000_00100000_01000000_00000000,
            0b00000000_00000000_10100000_00010000_00000000_00010000_10100000_00000000,
            0b00000000_00000000_01010000_10001000_00000000_10001000_01010000_00000000,
            0b00000000_00000000_00101000_01000100_00000000_01000100_00101000_00000000,
            0b00000000_00000000_00010100_00100010_00000000_00100010_00010100_00000000,
            0b00000000_00000000_00001010_00010001_00000000_00010001_00001010_00000000,
            0b00000000_00000000_00000101_00001000_00000000_00001000_00000101_00000000,
            0b00000000_00000000_00000010_00000100_00000000_00000100_00000010_00000000,
            // A3
            0b00000000_00000000_00000000_01000000_00100000_00000000_00100000_01000000,
            0b00000000_00000000_00000000_10100000_00010000_00000000_00010000_10100000,
            0b00000000_00000000_00000000_01010000_10001000_00000000_10001000_01010000,
            0b00000000_00000000_00000000_00101000_01000100_00000000_01000100_00101000,
            0b00000000_00000000_00000000_00010100_00100010_00000000_00100010_00010100,
            0b00000000_00000000_00000000_00001010_00010001_00000000_00010001_00001010,
            0b00000000_00000000_00000000_00000101_00001000_00000000_00001000_00000101,
            0b00000000_00000000_00000000_00000010_00000100_00000000_00000100_00000010,
            // A2
            0b00000000_00000000_00000000_00000000_01000000_00100000_00000000_00100000,
            0b00000000_00000000_00000000_00000000_10100000_00010000_00000000_00010000,
            0b00000000_00000000_00000000_00000000_01010000_10001000_00000000_10001000,
            0b00000000_00000000_00000000_00000000_00101000_01000100_00000000_01000100,
            0b00000000_00000000_00000000_00000000_00010100_00100010_00000000_00100010,
            0b00000000_00000000_00000000_00000000_00001010_00010001_00000000_00010001,
            0b00000000_00000000_00000000_00000000_00000101_00001000_00000000_00001000,
            0b00000000_00000000_00000000_00000000_00000010_00000100_00000000_00000100,
            // A1
            0b00000000_00000000_00000000_00000000_00000000_01000000_00100000_00000000,
            0b00000000_00000000_00000000_00000000_00000000_10100000_00010000_00000000,
            0b00000000_00000000_00000000_00000000_00000000_01010000_10001000_00000000,
            0b00000000_00000000_00000000_00000000_00000000_00101000_01000100_00000000,
            0b00000000_00000000_00000000_00000000_00000000_00010100_00100010_00000000,
            0b00000000_00000000_00000000_00000000_00000000_00001010_00010001_00000000,
            0b00000000_00000000_00000000_00000000_00000000_00000101_00001000_00000000,
            0b00000000_00000000_00000000_00000000_00000000_00000010_00000100_00000000,
        },
        generate_knight_moves,
    );
}
